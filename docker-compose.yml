services:

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASSWORD}
      POSTGRES_DB: ${PG_DB_NAME}
    volumes:
      - ./stonkinator_api/db_dumps/stonkinator.sql:/docker-entrypoint-initdb.d/datadump.sql
      - securities_data:/var/lib/postgresql/data
    ports:
      - ${PG_DB_PORT_EXP}:${PG_DB_PORT}

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MDB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MDB_PASSWORD}
    volumes:
      - stonkinator_data:/data/db
    ports:
      - ${MDB_PORT_EXP}:${MDB_PORT}

  stonkinator_api:
    depends_on:
      - ${MDB_SERVICE}
    build: ./stonkinator_api
    ports:
      - ${STONKINATOR_API_PORT_EXP}:${STONKINATOR_API_PORT}
    develop:
      watch:
        - action: rebuild
          files:
            - ./stonkinator_api/*.go
            - ./go.mod
            - ./go.sum

  stonkinator:
    depends_on:
      - ${MDB_SERVICE}
      - ${STONKINATOR_API_SERVICE}
    build: ./stonkinator
    ports:
      - 8888:8888
    volumes:
      - ./stonkinator:/app

  frontend:
    depends_on:
      - ${STONKINATOR_API_SERVICE}
    build: ./stonkinator_frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./stonkinator_frontend/src:/app/src

  alphascrape:
    depends_on:
      - ${MDB_SERVICE}
      - ${STONKINATOR_API_SERVICE}
    build: ./alphascrape
    volumes:
      - ./alphascrape:/app

volumes:
  securities_data:
  stonkinator_data:
