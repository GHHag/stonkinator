syntax = "proto3";

package stonkinator;

option go_package = "./stonkinator_rpc_service";

service StonkinatorService {
    rpc InsertExchange (InsertExchangeRequest) returns (InsertResponse);
    rpc GetExchange (GetByNameRequest) returns (GetExchangeResponse);
    rpc GetExchanges (GetAllRequest) returns (GetExchangesResponse);
    rpc InsertInstrument (Instrument) returns (InsertResponse);
    // rpc UpdateInstrument (Instrument) returns (UpdateResponse);
    rpc GetInstrument (GetBySymbolRequest) returns (Instrument);
    rpc GetDateTime (GetDateTimeRequest) returns (DateTime);
    rpc GetLastDate (GetLastDateRequest) returns (DateTime);
    rpc InsertPriceData (PriceData) returns (InsertResponse);
    rpc GetPriceData (GetPriceDataRequest) returns (GetPriceDataResponse);
    // rpc InsertMarketList (MarketList) returns (InsertResponse);
    // rpc UpdateMarketList (MarketList) returns (UpdateResponse);
    rpc GetExchangeInstruments (GetByIdRequest) returns (Instruments);
    rpc GetMarketListInstruments (GetByNameRequest) returns (Instruments);
    // rpc GetMarketListInstrumentsPriceData (MarketList) returns (GetPriceDataResponse);
    
    // Methods previously implemented by SystemsMongoDB
    // rpc InsertTradingSystem(TradingSystem) returns(InsertResponse);
    // rpc UpdateTradingSystemCurrentDateTime() returns ();
}

message Instrument {
    string id = 1;
    string exchange_id = 2;
    string instrument_name = 3;
    string symbol = 4;
    string sector = 5;
}

message Instruments {
    repeated Instrument instruments = 1;
}

message PriceData {
    string instrument_id = 1;
    double open_price = 2;
    double high_price = 3;
    double low_price = 4;
    double close_price = 5;
    int64 volume = 6;
    string date_time = 7;
}

// message MarketList {
//     string id = 1;
//     string market_list = 2;
// }

// message TradingSystem {
//     string trading_system_name = 1;
//     string current_date_time = 2;
// }

message DateTime {
    string date_time = 1;
}

message InsertResponse {
    int32 num_affected = 1;
}

message UpdateResponse {
    int32 num_affected = 1;
}

message GetByIdRequest {
    string id = 1;
}

message GetByNameRequest {
    string name = 1;
}

message GetAllRequest {}

message GetBySymbolRequest {
    string symbol = 1;
}

message InsertExchangeRequest {
    string exchange_name = 1;
    string currency = 2;
}

message GetExchangeResponse {
    string id = 1;
    string exchange_name = 2;
}

message GetExchangesResponse {
    repeated GetExchangeResponse exchanges = 1;
}

// message InsertPriceDataRequest {
//     repeated PriceData price_data = 1;
// }

message GetPriceDataRequest {
    string instrument_id = 1;
    string start_date_time = 2;
    string end_date_time = 3;
} 

message GetPriceDataResponse {
    repeated PriceData price_data = 2;
}

message GetDateTimeRequest {
    string symbol = 1;
    bool min = 2;
}

message GetLastDateRequest {
    string symbol_1 = 1;
    string symbol_2 = 2;
}