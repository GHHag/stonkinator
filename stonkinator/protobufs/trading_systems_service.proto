syntax = "proto3";

package stonkinator;

import "general_messages.proto";

option go_package = "./stonkinator_rpc_service";

service TradingSystemsService {
    rpc GetOrInsertTradingSystem(TradingSystem) returns(TradingSystem);
    rpc UpdateTradingSystemMetrics(TradingSystem) returns(CUD);
    rpc RemoveTradingSystemRelations(OperateOn) returns(CUD);
    rpc UpsertMarketState(MarketState) returns(CUD);
    rpc GetMarketStates(GetBy) returns(MarketStates);
    rpc UpdateCurrentDateTime(UpdateCurrentDateTimeRequest) returns(CUD);
    rpc GetCurrentDateTime(GetBy) returns(DateTime);
    rpc UpsertOrder(Order) returns(CUD);
    rpc GetOrder(GetBy) returns(Order);
    rpc UpsertPosition(Position) returns(CUD);
    rpc InsertPositions(Positions) returns(CUD);
    rpc GetPosition(GetBy) returns(Position);
    rpc GetPositions(GetBy) returns(Positions);
    rpc InsertTradingSystemModel(TradingSystemModel) returns(CUD);
    rpc GetTradingSystemModel(GetBy) returns(TradingSystemModel);
}

message TradingSystem {
    string id = 1;
    string name = 2;
    DateTime current_date_time = 3;
    string metrics = 4;
}

// TODO: Define different messages for limit and market order?
message Order {
    string instrument_id = 1;
    string trading_system_id = 2;
    string order_type = 3;
    string action = 4;
    DateTime created_date_time = 5;
    bool active = 6;
    bool direction_long = 7;
    double price = 8;
    int32 max_duration = 9;
    int32 duration = 10;
}

message Position {
    string id = 1;
    string instrument_id = 2;
    string trading_system_id = 3;
    DateTime date_time = 4;
    string position_data = 5;
    bytes serialized_position = 6;
}

message Positions {
    repeated Position positions = 1;
}

message MarketState {
    string instrument_id = 1;
    string trading_system_id = 2;
    string metrics = 3;
    string action = 4;
    DateTime signal_date_time = 5;
}

message MarketStates {
    repeated MarketState market_states = 1;
}

message TradingSystemModel {
    string trading_system_id = 1;
    string instrument_id = 2;
    bytes serialized_model = 3;
}

message UpdateCurrentDateTimeRequest {
    string trading_system_id = 1;
    DateTime date_time = 2;
}